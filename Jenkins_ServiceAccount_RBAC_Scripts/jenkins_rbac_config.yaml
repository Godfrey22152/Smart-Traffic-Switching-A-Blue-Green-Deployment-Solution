apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: webapps

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jenkins-role
  namespace: webapps
rules:

  # Permissions for core API Group
  - apiGroups: [""]
    resources:
      - pods
      - configmaps
      - events
      - endpoints
      - namespaces
      - nodes
      - secrets
      - persistentvolumes
      - persistentvolumeclaims
      - resourcequotas
      - replicationcontrollers
      - services
      - serviceaccounts
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # Permissions for app API group
  - apiGroups: ["apps"]
    resources:
      - deployments
      - replicasets
      - daemonsets
      - statefulsets
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # Permissions for Networking API group
  - apiGroups: ["networking.k8s.io"]
    resources:
    - ingresses
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]


  # Permissions for Autoscaling API group
  - apiGroups: ["autoscaling"]
    resources:
      - horizontalpodautoscalers
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # Permissions for batch API Group
  - apiGroups: ["batch"]
    resources:
      - jobs
      - cronjobs
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: app-rolebinding
  namespace: webapps
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkins-role
subjects:
- namespace: webapps
  kind: ServiceAccount
  name: jenkins

---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: jenkins-secret
  namespace: webapps
  annotations:
    kubernetes.io/service-account.name: jenkins
